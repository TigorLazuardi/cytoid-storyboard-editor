!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/a3c87ab5/
0	package.json	/^      ">0.2%",$/;"	s	array:browserslist.production
0	package.json	/^      "last 1 chrome version",$/;"	s	array:browserslist.development
0	public/manifest.json	/^    {$/;"	o	array:icons
0	tsconfig.json	/^      "dom",$/;"	s	array:compilerOptions.lib
0	tsconfig.json	/^    "src"$/;"	s	array:include
1	package.json	/^      "last 1 firefox version",$/;"	s	array:browserslist.development
1	package.json	/^      "not dead",$/;"	s	array:browserslist.production
1	public/manifest.json	/^    {$/;"	o	array:icons
1	tsconfig.json	/^      "dom.iterable",$/;"	s	array:compilerOptions.lib
2	package.json	/^      "last 1 safari version"$/;"	s	array:browserslist.development
2	package.json	/^      "not op_mini all"$/;"	s	array:browserslist.production
2	public/manifest.json	/^    {$/;"	o	array:icons
2	tsconfig.json	/^      "esnext"$/;"	s	array:compilerOptions.lib
@material-ui/core	package.json	/^    "@material-ui\/core": "^4.9.7",$/;"	s	object:dependencies
@material-ui/icons	package.json	/^    "@material-ui\/icons": "^4.9.1",$/;"	s	object:dependencies
@testing-library/jest-dom	package.json	/^    "@testing-library\/jest-dom": "^4.2.4",$/;"	s	object:dependencies
@testing-library/react	package.json	/^    "@testing-library\/react": "^9.3.2",$/;"	s	object:dependencies
@testing-library/user-event	package.json	/^    "@testing-library\/user-event": "^7.1.2",$/;"	s	object:dependencies
@types/jest	package.json	/^    "@types\/jest": "^24.0.0",$/;"	s	object:dependencies
@types/node	package.json	/^    "@types\/node": "^12.0.0",$/;"	s	object:dependencies
@types/react	package.json	/^    "@types\/react": "^16.9.0",$/;"	s	object:dependencies
@types/react-dom	package.json	/^    "@types\/react-dom": "^16.9.0",$/;"	s	object:dependencies
@types/react-router-dom	package.json	/^    "@types\/react-router-dom": "^5.1.3",$/;"	s	object:devDependencies
ArcadeContrast	src/models/state.ts	/^  ArcadeContrast?: number$/;"	p	interface:State
Available Scripts	README.md	/^## Available Scripts$/;"	s
Err	src/models/result_handling.ts	/^  public static Err<T>(error: T) {$/;"	m	class:Result
Learn More	README.md	/^## Learn More$/;"	s
MapFns	src/models/result_handling.ts	/^interface MapFns<T, E, TResult, EResult> {$/;"	i
NoteFillColor	src/models/state.ts	/^  NoteFillColor?: string[]$/;"	p	interface:State
Ok	src/models/result_handling.ts	/^  public static Ok<T>(success: T) {$/;"	m	class:Result
Result	src/models/result_handling.ts	/^export default class Result<TSuccess, TError> {$/;"	c
Sprite	src/models/sprite.ts	/^export default class Sprite {$/;"	c
State	src/models/state.ts	/^export default interface State {$/;"	i
Tape	src/models/state.ts	/^  Tape?: boolean$/;"	p	interface:State
`yarn build`	README.md	/^### `yarn build`$/;"	S
`yarn eject`	README.md	/^### `yarn eject`$/;"	S
`yarn start`	README.md	/^### `yarn start`$/;"	S
`yarn test`	README.md	/^### `yarn test`$/;"	S
addNewState	src/models/sprite.ts	/^  addNewState(state: State) {$/;"	m	class:Sprite
add_time	src/models/state.ts	/^  add_time?: number$/;"	p	interface:State
allowJs	tsconfig.json	/^    "allowJs": true,$/;"	b	object:compilerOptions
allowSyntheticDefaultImports	tsconfig.json	/^    "allowSyntheticDefaultImports": true,$/;"	b	object:compilerOptions
arcade	src/models/state.ts	/^  arcade?: boolean$/;"	p	interface:State
arcade_intensity	src/models/state.ts	/^  arcade_intensity?: number$/;"	p	interface:State
arcade_interference_size	src/models/state.ts	/^  arcade_interference_size?: number$/;"	p	interface:State
arcade_interference_speed	src/models/state.ts	/^  arcade_interference_speed?: number$/;"	p	interface:State
author	package.json	/^  "author": {$/;"	o
background_color	public/manifest.json	/^  "background_color": "#ffffff"$/;"	s
background_dim	src/models/state.ts	/^  background_dim?: number$/;"	p	interface:State
bloom	src/models/state.ts	/^  bloom?: boolean$/;"	p	interface:State
bloom_intensity	src/models/state.ts	/^  bloom_intensity?: number$/;"	p	interface:State
body	src/index.css	/^body {$/;"	s
brightness	src/models/state.ts	/^  brightness?: number$/;"	p	interface:State
browserslist	package.json	/^  "browserslist": {$/;"	o
build	package.json	/^    "build": "react-scripts build",$/;"	s	object:scripts
chomatical_intensity	src/models/state.ts	/^  chomatical_intensity?: number$/;"	p	interface:State
chromatic	src/models/state.ts	/^  chromatic?: boolean$/;"	p	interface:State
chromatic_end	src/models/state.ts	/^  chromatic_end?: number$/;"	p	interface:State
chromatic_intensity	src/models/state.ts	/^  chromatic_intensity?: number$/;"	p	interface:State
chromatic_start	src/models/state.ts	/^  chromatic_start?: number$/;"	p	interface:State
chromatical	src/models/state.ts	/^  chromatical?: boolean$/;"	p	interface:State
chromatical_fade	src/models/state.ts	/^  chromatical_fade?: number$/;"	p	interface:State
chromatical_speed	src/models/state.ts	/^  chromatical_speed?: number$/;"	p	interface:State
code	src/index.css	/^code {$/;"	s
color_adjustment	src/models/state.ts	/^  color_adjustment?: boolean$/;"	p	interface:State
color_filter	src/models/state.ts	/^  color_filter?: boolean$/;"	p	interface:State
color_filter_color	src/models/state.ts	/^  color_filter_color?: string$/;"	p	interface:State
compilerOptions	tsconfig.json	/^  "compilerOptions": {$/;"	o
concurrently	package.json	/^    "concurrently": "^5.1.0",$/;"	s	object:devDependencies
constructor	src/models/result_handling.ts	/^  constructor($/;"	m	class:Result
constructor	src/models/sprite.ts	/^  constructor(id: number, path: string, time: string | number) {$/;"	m	class:Sprite
contrast	src/models/state.ts	/^  contrast?: number$/;"	p	interface:State
createWindow	public/electron.js	/^const createWindow = () => {$/;"	C
deleteState	src/models/sprite.ts	/^  deleteState(index: number): Result<boolean, string> {$/;"	m	class:Sprite
dependencies	package.json	/^  "dependencies": {$/;"	o
devDependencies	package.json	/^  "devDependencies": {$/;"	o
development	package.json	/^    "development": [$/;"	a	object:browserslist
display	public/manifest.json	/^  "display": "standalone",$/;"	s
dream	src/models/state.ts	/^  dream?: boolean$/;"	p	interface:State
dream_intensity	src/models/state.ts	/^  dream_intensity?: number$/;"	p	interface:State
eject	package.json	/^    "eject": "react-scripts eject",$/;"	s	object:scripts
electron	package.json	/^    "electron": "^8.2.0",$/;"	s	object:devDependencies
electron-builder	package.json	/^    "electron-builder": "^22.4.1",$/;"	s	object:devDependencies
electron-is-dev	package.json	/^    "electron-is-dev": "^1.1.0",$/;"	s	object:devDependencies
electron:dev	package.json	/^    "electron:dev": "concurrently \\"BROWSER=NONE npm start\\" \\"wait-on http:\/\/localhost:300/;"	s	object:scripts
email	package.json	/^    "email": "tigor.hutasuhut@gmail.com",$/;"	s	object:author
error	src/models/result_handling.ts	/^    private error: TError,$/;"	p	class:Result
esModuleInterop	tsconfig.json	/^    "esModuleInterop": true,$/;"	b	object:compilerOptions
eslintConfig	package.json	/^  "eslintConfig": {$/;"	o
extends	package.json	/^    "extends": "react-app"$/;"	s	object:eslintConfig
fail	src/models/result_handling.ts	/^  fail: (a: E) => EResult$/;"	p	interface:MapFns
fisheye	src/models/state.ts	/^  fisheye?: boolean$/;"	p	interface:State
fisheye_intensity	src/models/state.ts	/^  fisheye_intensity?: number$/;"	p	interface:State
focus	src/models/state.ts	/^  focus?: boolean$/;"	p	interface:State
focus_color	src/models/state.ts	/^  focus_color?: string$/;"	p	interface:State
focus_intensity	src/models/state.ts	/^  focus_intensity?: number$/;"	p	interface:State
focus_size	src/models/state.ts	/^  focus_size?: number$/;"	p	interface:State
focus_speed	src/models/state.ts	/^  focus_speed?: number$/;"	p	interface:State
forceConsistentCasingInFileNames	tsconfig.json	/^    "forceConsistentCasingInFileNames": true,$/;"	b	object:compilerOptions
fov	src/models/state.ts	/^  fov?: number$/;"	p	interface:State
fs	src/config.ts	/^const fs = window.require('fs')$/;"	C
glitch	src/models/state.ts	/^  glitch?: boolean$/;"	p	interface:State
glitch_intensity	src/models/state.ts	/^  glitch_intensity?: number$/;"	p	interface:State
gray_scale	src/models/state.ts	/^  gray_scale?: boolean$/;"	p	interface:State
gray_scale_intensity	src/models/state.ts	/^  gray_scale_intensity?: number$/;"	p	interface:State
icons	public/manifest.json	/^  "icons": [$/;"	a
id	src/models/sprite.ts	/^  public id: number$/;"	p	class:Sprite
include	tsconfig.json	/^  "include": [$/;"	a
install	package.json	/^    "install": "^0.13.0",$/;"	s	object:dependencies
isDev	public/electron.js	/^const isDev = require('electron-is-dev')$/;"	C
isError	src/models/result_handling.ts	/^    private isError: boolean$/;"	p	class:Result
isolatedModules	tsconfig.json	/^    "isolatedModules": true,$/;"	b	object:compilerOptions
jsx	tsconfig.json	/^    "jsx": "react"$/;"	s	object:compilerOptions
lib	tsconfig.json	/^    "lib": [$/;"	a	object:compilerOptions
main	package.json	/^  "main": "public\/electron.js",$/;"	s
material-icons	package.json	/^    "material-icons": "^0.3.1",$/;"	s	object:dependencies
module	tsconfig.json	/^    "module": "esnext",$/;"	s	object:compilerOptions
moduleResolution	tsconfig.json	/^    "moduleResolution": "node",$/;"	s	object:compilerOptions
name	package.json	/^    "name": "CrowFX",$/;"	s	object:author
name	package.json	/^  "name": "cytoid-storyboard-editor",$/;"	s
name	public/manifest.json	/^  "name": "Create React App Sample",$/;"	s
noEmit	tsconfig.json	/^    "noEmit": true,$/;"	b	object:compilerOptions
noise	src/models/state.ts	/^  noise?: boolean$/;"	p	interface:State
noise_intensity	src/models/state.ts	/^  noise_intensity?: number$/;"	p	interface:State
note_opacity_multiplier	src/models/state.ts	/^  note_opacity_multiplier?: number$/;"	p	interface:State
note_ring_color	src/models/state.ts	/^  note_ring_color?: string$/;"	p	interface:State
npm	package.json	/^    "npm": "^6.14.4",$/;"	s	object:dependencies
ok	src/models/result_handling.ts	/^  ok: (a: T) => TResult$/;"	p	interface:MapFns
opacity	src/models/state.ts	/^  opacity?: number$/;"	p	interface:State
override_scanline_pos	src/models/state.ts	/^  override_scanline_pos?: boolean$/;"	p	interface:State
path	public/electron.js	/^const path = require('path')$/;"	C
path	src/models/sprite.ts	/^  public path: string$/;"	p	class:Sprite
perspective	src/models/state.ts	/^  perspective?: boolean$/;"	p	interface:State
private	package.json	/^  "private": true,$/;"	b
production	package.json	/^    "production": [$/;"	a	object:browserslist
radial_blur	src/models/state.ts	/^  radial_blur?: boolean$/;"	p	interface:State
radial_blur_intensity	src/models/state.ts	/^  radial_blur_intensity?: number$/;"	p	interface:State
react	package.json	/^    "react": "^16.13.1",$/;"	s	object:dependencies
react-dom	package.json	/^    "react-dom": "^16.13.1",$/;"	s	object:dependencies
react-router-dom	package.json	/^    "react-router-dom": "^5.1.2",$/;"	s	object:dependencies
react-scripts	package.json	/^    "react-scripts": "3.4.1",$/;"	s	object:dependencies
relative_time	src/models/state.ts	/^  relative_time?: number$/;"	p	interface:State
resolveJsonModule	tsconfig.json	/^    "resolveJsonModule": true,$/;"	b	object:compilerOptions
root	public/index.html	/^    <div id="root"><\/div>$/;"	I
rot_x	src/models/state.ts	/^  rot_x?: number$/;"	p	interface:State
rot_y	src/models/state.ts	/^  rot_y?: number$/;"	p	interface:State
rot_z	src/models/state.ts	/^  rot_z?: number$/;"	p	interface:State
saturation	src/models/state.ts	/^  saturation?: number$/;"	p	interface:State
scanline_color	src/models/state.ts	/^  scanline_color?: string$/;"	p	interface:State
scanline_opacity	src/models/state.ts	/^  scanline_opacity?: number$/;"	p	interface:State
scanline_pos	src/models/state.ts	/^  scanline_pos?: number$/;"	p	interface:State
scripts	package.json	/^  "scripts": {$/;"	o
sepia	src/models/state.ts	/^  sepia?: boolean$/;"	p	interface:State
sepia_intensity	src/models/state.ts	/^  sepia_intensity?: number$/;"	p	interface:State
shockwave	src/models/state.ts	/^  shockwave?: boolean$/;"	p	interface:State
shockwave_speed	src/models/state.ts	/^  shockwave_speed?: number$/;"	p	interface:State
short_name	public/manifest.json	/^  "short_name": "React App",$/;"	s
size	src/models/state.ts	/^  size?: number$/;"	p	interface:State
sizes	public/manifest.json	/^      "sizes": "192x192"$/;"	s	object:icons.1
sizes	public/manifest.json	/^      "sizes": "512x512"$/;"	s	object:icons.2
sizes	public/manifest.json	/^      "sizes": "64x64 32x32 24x24 16x16",$/;"	s	object:icons.0
skipLibCheck	tsconfig.json	/^    "skipLibCheck": true,$/;"	b	object:compilerOptions
src	public/manifest.json	/^      "src": "favicon.ico",$/;"	s	object:icons.0
src	public/manifest.json	/^      "src": "logo192.png",$/;"	s	object:icons.1
src	public/manifest.json	/^      "src": "logo512.png",$/;"	s	object:icons.2
start	package.json	/^    "start": "react-scripts start",$/;"	s	object:scripts
start_url	public/manifest.json	/^  "start_url": ".",$/;"	s
state	src/models/sprite.ts	/^  public state: State[]$/;"	p	class:Sprite
storyboard_opacity	src/models/state.ts	/^  storyboard_opacity?: number$/;"	p	interface:State
strict	tsconfig.json	/^    "strict": true,$/;"	b	object:compilerOptions
success	src/models/result_handling.ts	/^    private success: TSuccess,$/;"	p	class:Result
target	tsconfig.json	/^    "target": "es5",$/;"	s	object:compilerOptions
template	src/models/state.ts	/^  template?: string$/;"	p	interface:State
test	package.json	/^    "test": "react-scripts test",$/;"	s	object:scripts
theme_color	public/manifest.json	/^  "theme_color": "#000000",$/;"	s
time	src/models/sprite.ts	/^  public time: string | number$/;"	p	class:Sprite
time	src/models/state.ts	/^  time?: string$/;"	p	interface:State
type	public/manifest.json	/^      "type": "image\/png",$/;"	s	object:icons.1
type	public/manifest.json	/^      "type": "image\/png",$/;"	s	object:icons.2
type	public/manifest.json	/^      "type": "image\/x-icon"$/;"	s	object:icons.0
typeface-roboto	package.json	/^    "typeface-roboto": "^0.0.75",$/;"	s	object:dependencies
typescript	package.json	/^    "typescript": "~3.7.2"$/;"	s	object:dependencies
ui_opacity	src/models/state.ts	/^  ui_opacity?: number$/;"	p	interface:State
updateState	src/models/sprite.ts	/^  updateState(index: number, state: State): Result<boolean, string> {$/;"	m	class:Sprite
url	package.json	/^    "url": "https:\/\/www.github.com\/TigorLazuardi"$/;"	s	object:author
version	package.json	/^  "version": "0.1.0",$/;"	s
vignette	src/models/state.ts	/^  vignette?: boolean$/;"	p	interface:State
vignette_color	src/models/state.ts	/^  vignette_color?: string$/;"	p	interface:State
vignette_end	src/models/state.ts	/^  vignette_end?: number$/;"	p	interface:State
vignette_intensity	src/models/state.ts	/^  vignette_intensity?: number$/;"	p	interface:State
vignette_start	src/models/state.ts	/^  vignette_start?: number$/;"	p	interface:State
w	public/electron.js	/^  w = new BrowserWindow({ minWidth: 600, minHeight: 480 })$/;"	v
w	public/electron.js	/^let w$/;"	v
wait-on	package.json	/^    "wait-on": "^4.0.1"$/;"	s	object:devDependencies
when	src/models/result_handling.ts	/^  when<T, E>(mapFns: MapFns<TSuccess, TError, T, E>) {$/;"	m	class:Result
x	src/models/state.ts	/^  x?: number$/;"	p	interface:State
y	src/models/state.ts	/^  y?: number$/;"	p	interface:State
